{"filter":false,"title":"exam_spec.rb","tooltip":"/spec/exam_spec.rb","undoManager":{"mark":48,"position":48,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["x"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"remove","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"remove","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"remove","lines":["x"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":109,"column":17},"end":{"row":109,"column":18},"action":"remove","lines":[">"]}]}],[{"group":"doc","deltas":[{"start":{"row":109,"column":17},"end":{"row":109,"column":18},"action":"insert","lines":["<"]}]}],[{"group":"doc","deltas":[{"start":{"row":110,"column":24},"end":{"row":110,"column":25},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":110,"column":23},"end":{"row":110,"column":24},"action":"remove","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":110,"column":22},"end":{"row":110,"column":23},"action":"remove","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":110,"column":21},"end":{"row":110,"column":22},"action":"remove","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":110,"column":21},"end":{"row":110,"column":22},"action":"insert","lines":["f"]}]}],[{"group":"doc","deltas":[{"start":{"row":110,"column":22},"end":{"row":110,"column":23},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":110,"column":23},"end":{"row":110,"column":24},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":110,"column":24},"end":{"row":110,"column":25},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":110,"column":25},"end":{"row":110,"column":26},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":109,"column":17},"end":{"row":109,"column":18},"action":"insert","lines":[">"]},{"start":{"row":109,"column":18},"end":{"row":109,"column":19},"action":"remove","lines":["<"]},{"start":{"row":110,"column":21},"end":{"row":110,"column":24},"action":"insert","lines":["tru"]},{"start":{"row":110,"column":24},"end":{"row":110,"column":28},"action":"remove","lines":["fals"]},{"start":{"row":1,"column":8},"end":{"row":1,"column":15},"action":"remove","lines":["\"./lib/"]},{"start":{"row":1,"column":8},"end":{"row":1,"column":9},"action":"insert","lines":["'"]},{"start":{"row":1,"column":11},"end":{"row":1,"column":12},"action":"remove","lines":["_"]},{"start":{"row":1,"column":11},"end":{"row":1,"column":12},"action":"insert","lines":["-"]},{"start":{"row":1,"column":15},"end":{"row":3,"column":0},"action":"remove","lines":["/test.rb\"","require \"./lib/my_gem/list.rb\"",""]},{"start":{"row":1,"column":15},"end":{"row":2,"column":21},"action":"insert","lines":["'","require 'spec_helper'"]},{"start":{"row":3,"column":9},"end":{"row":3,"column":13},"action":"remove","lines":["Test"]},{"start":{"row":3,"column":9},"end":{"row":3,"column":13},"action":"insert","lines":["Exam"]},{"start":{"row":4,"column":0},"end":{"row":4,"column":2},"action":"remove","lines":["  "]},{"start":{"row":4,"column":0},"end":{"row":4,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":5,"column":0},"end":{"row":5,"column":4},"action":"remove","lines":["    "]},{"start":{"row":5,"column":0},"end":{"row":5,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":6,"column":0},"end":{"row":6,"column":1},"action":"remove","lines":[" "]},{"start":{"row":7,"column":3},"end":{"row":7,"column":4},"action":"remove","lines":[" "]},{"start":{"row":8,"column":0},"end":{"row":8,"column":1},"action":"remove","lines":[" "]},{"start":{"row":9,"column":3},"end":{"row":9,"column":4},"action":"remove","lines":[" "]},{"start":{"row":10,"column":3},"end":{"row":10,"column":4},"action":"remove","lines":[" "]},{"start":{"row":11,"column":0},"end":{"row":11,"column":1},"action":"remove","lines":["\t"]},{"start":{"row":11,"column":2},"end":{"row":11,"column":3},"action":"remove","lines":["l"]},{"start":{"row":11,"column":2},"end":{"row":11,"column":4},"action":"insert","lines":["ex"]},{"start":{"row":11,"column":7},"end":{"row":11,"column":11},"action":"remove","lines":["List"]},{"start":{"row":11,"column":7},"end":{"row":11,"column":11},"action":"insert","lines":["Exam"]},{"start":{"row":11,"column":16},"end":{"row":11,"column":17},"action":"insert","lines":["["]},{"start":{"row":11,"column":20},"end":{"row":25,"column":16},"action":"remove","lines":[")","  end","  ","  describe \"#Almacenamiento de Pregunta\" do","    it \"Se guarda correctamente una pregunta\" do","      @q1.q.should eq(\"Hola?\")","    end","  end","  describe \"#Almanecamiento de Respuesta 1\" do","    it \"Se guarda correctamente la primera respuesta\" do","      @q1.a1[0].should eq(\"Si\")","    end","  end","  describe \"#Almanecamiento de Respuesta 2\" do","    it \"Se guard"]},{"start":{"row":11,"column":20},"end":{"row":19,"column":16},"action":"insert","lines":[", @q2, @q3, @q4, @q5, @q6])","\tend","\tit \"Se guarda correctamente un valor\" do","\t\t@ex.listp.pophead.should eq(@q6)","\tend","\tit \"Se guarda correctamente un valor part 2\" do","\t\t@ex.listp.poptail.should eq(@q1)","\tend","\tit \"Se comprueb"]},{"start":{"row":19,"column":32},"end":{"row":19,"column":38},"action":"remove","lines":["la seg"]},{"start":{"row":19,"column":34},"end":{"row":19,"column":35},"action":"remove","lines":["d"]},{"start":{"row":19,"column":36},"end":{"row":19,"column":37},"action":"insert","lines":["p"]},{"start":{"row":19,"column":39},"end":{"row":19,"column":44},"action":"remove","lines":["spues"]},{"start":{"row":19,"column":39},"end":{"row":19,"column":42},"action":"insert","lines":["gun"]},{"start":{"row":20,"column":0},"end":{"row":26,"column":4},"action":"remove","lines":["      @q1.a1[1].should eq(\"No\")","    end","  end","  describe \"#Almanecamiento de Respuesta 3\" do","    it \"Se guarda correctamente la tercero respuesta\" do","      @q1.a1[2].should eq(\"Quizas\")","    "]},{"start":{"row":20,"column":0},"end":{"row":23,"column":1},"action":"insert","lines":["\t\t@ex.answer=3","\t\t@ex.checkquestion","\t\t@ex.correct.should eq(1)","\t"]},{"start":{"row":24,"column":0},"end":{"row":24,"column":2},"action":"remove","lines":["  "]},{"start":{"row":25,"column":0},"end":{"row":25,"column":2},"action":"remove","lines":["  "]},{"start":{"row":25,"column":0},"end":{"row":26,"column":0},"action":"insert","lines":["",""]},{"start":{"row":26,"column":9},"end":{"row":43,"column":24},"action":"remove","lines":["\"#Almanecamiento de Respuesta 4\" do","    it \"Se guarda correctamente la cuarta respuesta\" do","      @q1.a1[3].should eq(\"Puede\")","    end","  end","  describe \"#Almanecamiento de Respuesta Correcta\" do","    it \"Se guarda correctamente la respuesta correcta\" do","      @q1.t.should eq(3)","    end","  end","  describe \"#Mostrar Pregunta\" do","    it \"Se muestra la pregunta correctamente\" do","      @q1.show()","      @q1.a.should eq @q1.a1[0]","    end","  end","  #TESTS PARA LA PRRIMERA PREGUNTA","  describe \"#Mostrar Pre"]},{"start":{"row":26,"column":9},"end":{"row":29,"column":220},"action":"insert","lines":["Interfaz do","\tbefore :each do","\t@q1 = Test.new(\"Hola?\", [\"Si\", \"No\", \"Quizas\", \"Puede\"], 3, 1)","   @q2 = Test.new('Â¿Cual es la salida del siguiente codigo Ruby?' \"\\n\" 'class Xyz' \"\\n\"'   def pots'\" \\n\"'     @nice'\" \\n\"'   end'\" \\n\"' end '\"\\n\\n\"' xyz = Xyz.new'\" \\n\"' p xyz.pots', ['#<Xyz:0xa000208', 'nil', \"0\", \"Nin"]},{"start":{"row":29,"column":223},"end":{"row":29,"column":224},"action":"remove","lines":["t"]},{"start":{"row":29,"column":225},"end":{"row":31,"column":15},"action":"remove","lines":["1\" do","    it \"Se muestra la pregunta correctamente\" do","      @q2.show("]},{"start":{"row":29,"column":225},"end":{"row":29,"column":250},"action":"insert","lines":["de las anteriores\"], 2, 2"]},{"start":{"row":30,"column":3},"end":{"row":30,"column":4},"action":"remove","lines":[" "]},{"start":{"row":30,"column":3},"end":{"row":50,"column":2},"action":"remove","lines":["  @q2.a.should eq @q2.a1[1]","    end","  end","  #TESTS PARA LA SEGUNDA PREGUNTA","  describe \"#Mostrar Pregunta 2\" do","    it \"Se muestra la pregunta correctamente\" do","      @q3.show()","      @q3.a.should eq @q3.a1[0]","    end","  end","  #TESTS PARA LA TERCERA PREGUNTA","  describe \"#Mostrar Pregunta 3\" do","    it \"Se muestra la pregunta correctamente\" do","      @q4.show()","      @q4.a.should eq @q4.a1[2]","    end","  end","  #TESTS PARA LA CUARTA PREGUNTA","  describe \"#Mostrar Pregunta 4\" do","    it \"Se muestra la pregunta correctamente\" do","  "]},{"start":{"row":30,"column":3},"end":{"row":31,"column":0},"action":"insert","lines":["@q3 = BTest.new(\"La siguiente definicion de un hash en Ruby es valida: \\n hash_raro = { \\n   [1, 2, 3] => Object.new(), \\n   hash.new => :toto \\n }\", [\"Cierto\", \"Falso\"], 1,1);",""]},{"start":{"row":31,"column":3},"end":{"row":31,"column":4},"action":"remove","lines":[" "]},{"start":{"row":31,"column":5},"end":{"row":75,"column":54},"action":"remove","lines":["5.show()","      @q5.a.should eq @q5.a1[3]","    end","  end","  #TESTS PARA LA QUINTA PREGUNTA","  describe \"#Mostrar Pregunta 5\" do","    it \"Se muestra la pregunta correctamente\" do","      @q6.show()","      @q6.a.should eq @q6.a1[0]","    end","  end","  #TESTS varios","  describe \"#Varios\" do","    it \"varios tests\" do","      expect(@q5).instance_of?(Test)","      expect(@q6).instance_of?(Test)","      expect(@q5).is_a?(Test)","      expect(@q6).is_a?(Test)","    end","  end","  describe \"Comparable\" do","    it \"test de comparables\" do","      test = @q1 == @q2","      test.should eq(false)","    end","  end","  describe \"#2 Comparables\" do","    it \"test de comparables\" do","      test = @q3 > @q6","      test.should eq(true)","    end","  end","  describe \"#3 Comparables\" do","    it \"test de comparables\" do","      test = @q2 > @q6","      test.should eq(true)","    end","  end","\tit \"Se guarda correctamente un valor\" do","\t\t@l.head.value.should eq(@q1)","\tend","\tit \"El nodo tiene un apuntador\" do","\t\t@l.head.next.should eq(nil)","\tend","\tit \"Funciona el metodo pushhead y el nodo anterior ap"]},{"start":{"row":31,"column":5},"end":{"row":33,"column":65},"action":"insert","lines":["4 = Test.new('Cual es la salida del siguiente codigo Ruby?'\"\\n\"' class Array'\"\\n\"'   def say_hi'\"\\n\"'     \"HEY!\"'\"\\n\"'   end'\"\\n\"' end'\"\\n\\n\"' p [1, \"bob\"].say_hi', [\"1\", \"bob\", \"HEY!\", \"Ninguna de las anteriores\"],3,3);","   @q5 = Test.new('Â¿Cual es el tipo del objeto en el siguiente codigo en Ruby?'\"\\n\"'class Objeto'\"\\n\"'end', [\"Una instancia de la clase\", \"Una constante\", \"Un objeto\", \"Ninguna de las anteriores\"], 4,4);","   @q6 = BTest.new(\"Es apropiado que una clase Tablero herede de "]},{"start":{"row":33,"column":67},"end":{"row":33,"column":68},"action":"remove","lines":["t"]},{"start":{"row":33,"column":69},"end":{"row":33,"column":73},"action":"remove","lines":["al n"]},{"start":{"row":33,"column":69},"end":{"row":33,"column":76},"action":"insert","lines":["clase J"]},{"start":{"row":33,"column":78},"end":{"row":33,"column":79},"action":"remove","lines":["v"]},{"start":{"row":33,"column":78},"end":{"row":33,"column":79},"action":"insert","lines":["g"]},{"start":{"row":33,"column":81},"end":{"row":46,"column":12},"action":"remove","lines":[" do","\t\t@l.pushhead(@q2)","\t\t@l.head.previous.next.should eq(@l.head)","\tend","\tit \"Funciona el metodo pushtail y el nodo siguiente apunta al nuevo\" do","\t\t@l.pushtail(@q2)","\t\t@l.tail.next.previous.should eq(@l.tail)","\tend","\tit \"Se pueden insertar varios elementos\" do","\t\t@l.pushhead(@q2)","\t\t@l.pushtail(@q3)","\tend","\tit \"Se puede extraer el primer elemento de la cabeza\" do","\t\t@l.pophead"]},{"start":{"row":33,"column":81},"end":{"row":38,"column":10},"action":"insert","lines":[", [\"Cierto\", \"Falso\"], 1,1);","\t@ex = Exam.new([@q1, @q2, @q3, @q4, @q5, @q6])","\t@in = Interfaz.new(@ex)","\tend","\tit \"Se inicializa bien\" do","\t\t@in.exam"]},{"start":{"row":38,"column":22},"end":{"row":38,"column":24},"action":"remove","lines":["q1"]},{"start":{"row":38,"column":22},"end":{"row":38,"column":24},"action":"insert","lines":["ex"]},{"start":{"row":40,"column":8},"end":{"row":46,"column":12},"action":"remove","lines":["puede extraer el primer elemento de la cola\" do","\t\t@l.poptail.should eq(@q1)","\tend","\tit \"Se pueden insertar y extraer varios elementos\" do","\t\t@l.pushtail(@q4)","\t\t@l.pushhead(@q5)","\t\t@l.pophead"]},{"start":{"row":40,"column":8},"end":{"row":43,"column":18},"action":"insert","lines":["realiza bien\" do","\t\t@in.exam.answer=1","\t\t@in.test","\t\t@in.exam.correct"]},{"start":{"row":43,"column":29},"end":{"row":43,"column":32},"action":"remove","lines":["@q5"]},{"start":{"row":43,"column":29},"end":{"row":43,"column":30},"action":"insert","lines":["2"]},{"start":{"row":44,"column":3},"end":{"row":47,"column":12},"action":"remove","lines":["l.poptail.should eq(@q4)","\tend","\tit \"Extraer de una lista vacia da error\" do","\t\t@l.pophead"]},{"start":{"row":44,"column":3},"end":{"row":44,"column":15},"action":"insert","lines":["in.exam.fail"]},{"start":{"row":44,"column":26},"end":{"row":44,"column":29},"action":"remove","lines":["@q1"]},{"start":{"row":44,"column":26},"end":{"row":44,"column":27},"action":"insert","lines":["4"]},{"start":{"row":45,"column":3},"end":{"row":49,"column":8},"action":"remove","lines":["l.poptail.should eq(\"No elements left\")","\tend","#Prct8","\tit \"Funciona each\" do","\t\t@l.max"]},{"start":{"row":45,"column":3},"end":{"row":45,"column":15},"action":"insert","lines":["in.exam.nota"]},{"start":{"row":45,"column":26},"end":{"row":45,"column":29},"action":"remove","lines":["@q1"]},{"start":{"row":45,"column":26},"end":{"row":45,"column":27},"action":"insert","lines":["3"]}]}],[{"group":"doc","deltas":[{"start":{"row":45,"column":28},"end":{"row":46,"column":0},"action":"insert","lines":["",""]},{"start":{"row":46,"column":0},"end":{"row":46,"column":2},"action":"insert","lines":["\t\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":2},"end":{"row":46,"column":3},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":3},"end":{"row":46,"column":4},"action":"insert","lines":["x"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":4},"end":{"row":46,"column":5},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":5},"end":{"row":46,"column":6},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":6},"end":{"row":46,"column":7},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":6},"end":{"row":46,"column":7},"action":"remove","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":6},"end":{"row":46,"column":7},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":6},"end":{"row":46,"column":7},"action":"remove","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":5},"end":{"row":46,"column":6},"action":"remove","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":4},"end":{"row":46,"column":5},"action":"remove","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":3},"end":{"row":46,"column":4},"action":"remove","lines":["x"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":2},"end":{"row":46,"column":3},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":2},"end":{"row":46,"column":3},"action":"insert","lines":["@"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":3},"end":{"row":46,"column":4},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":4},"end":{"row":46,"column":5},"action":"insert","lines":["x"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":4},"end":{"row":46,"column":5},"action":"remove","lines":["x"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":3},"end":{"row":46,"column":4},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":3},"end":{"row":46,"column":4},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":4},"end":{"row":46,"column":5},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":5},"end":{"row":46,"column":6},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":6},"end":{"row":46,"column":7},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":6},"end":{"row":46,"column":7},"action":"remove","lines":["c"]},{"start":{"row":46,"column":6},"end":{"row":47,"column":12},"action":"insert","lines":["checkquestion","\t\t\t\t#imprime"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":4},"end":{"row":46,"column":5},"action":"remove","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":3},"end":{"row":46,"column":4},"action":"remove","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":3},"end":{"row":46,"column":4},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":4},"end":{"row":46,"column":5},"action":"insert","lines":["x"]}]}],[{"group":"doc","deltas":[{"start":{"row":46,"column":0},"end":{"row":47,"column":12},"action":"remove","lines":["\t\t@ex.checkquestion","\t\t\t\t#imprime"]}]}],[{"group":"doc","deltas":[{"start":{"row":45,"column":28},"end":{"row":46,"column":0},"action":"remove","lines":["",""]}]}]]},"ace":{"folds":[],"scrolltop":264,"scrollleft":0,"selection":{"start":{"row":45,"column":28},"end":{"row":45,"column":28},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":21,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1416580891419,"hash":"ee2fb75692913f7780af386c297489c2e2e261d3"}